/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    users: User;
    tenants: Tenant;
    media: Media;
    'payload-kv': PayloadKv;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-kv': PayloadKvSelect<false> | PayloadKvSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  tenant?: (number | null) | Tenant;
  title: string;
  slug: string;
  /**
   * Page type determines which fields are available
   */
  pageType?: ('standard' | 'landing' | 'blog' | 'custom') | null;
  /**
   * Meta description for SEO
   */
  description?: string | null;
  /**
   * Main page content (used for standard pages and blog posts)
   */
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Featured image for the page
   */
  featuredImage?: (number | null) | Media;
  meta?: {
    /**
     * Custom meta title (defaults to page title)
     */
    title?: string | null;
    /**
     * Custom meta description
     */
    description?: string | null;
    /**
     * Open Graph image for social sharing
     */
    ogImage?: (number | null) | Media;
  };
  /**
   * Publication date
   */
  publishedAt?: string | null;
  /**
   * Page sections for landing pages (only shown when pageType is "landing")
   */
  sections?: {
    /**
     * Header/Navigation configuration
     */
    header?: {
      logo_text?: string | null;
      menu?:
        | {
            label: string;
            link: string;
            id?: string | null;
          }[]
        | null;
      cta?: {
        label?: string | null;
        link?: string | null;
      };
    };
    /**
     * Hero section at the top of the page
     */
    hero: {
      headline: string;
      subheadline?: string | null;
      cta?: string | null;
      /**
       * Hero image/illustration
       */
      image?: (number | null) | Media;
      /**
       * Statistics displayed below CTA
       */
      stats?:
        | {
            value: string;
            label: string;
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Features/benefits section
     */
    features?: {
      title?: string | null;
      subtitle?: string | null;
      /**
       * Feature items
       */
      items?:
        | {
            icon?: ('clock' | 'euro' | 'trendingUp' | 'shield' | 'smartphone' | 'zap') | null;
            title: string;
            description: string;
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Process/steps section
     */
    process?: {
      title?: string | null;
      subtitle?: string | null;
      /**
       * Process steps
       */
      steps?:
        | {
            number?: string | null;
            icon?: ('fileText' | 'wand2' | 'checkCircle2') | null;
            title: string;
            description: string;
            color?: ('teal' | 'navy') | null;
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Contact form section
     */
    contact?: {
      title?: string | null;
      subtitle?: string | null;
      form?: {
        name?: string | null;
        email?: string | null;
        phone?: string | null;
        voicePrompt?: string | null;
        voiceListening?: string | null;
        voiceTranscript?: string | null;
        submit?: string | null;
      };
    };
    /**
     * Footer configuration
     */
    footer?: {
      brand?: {
        name?: string | null;
        tagline?: string | null;
      };
      contact?: {
        title?: string | null;
        email?: string | null;
        phone?: string | null;
      };
      links?: {
        title?: string | null;
        items?:
          | {
              label: string;
              href: string;
              id?: string | null;
            }[]
          | null;
      };
      copyright?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  /**
   * Used for domain-based tenant handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /tenant-slug/page-slug
   */
  slug: string;
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  /**
   * Template determines the page structure and which pages are created automatically
   */
  template: 'ftiaxesite';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  tenant?: (number | null) | Tenant;
  /**
   * Alternative text for accessibility
   */
  alt?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  password?: string | null;
  roles?: ('super-admin' | 'user')[] | null;
  username?: string | null;
  tenants?:
    | {
        tenant: number | Tenant;
        roles: ('tenant-admin' | 'tenant-viewer')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-kv".
 */
export interface PayloadKv {
  id: number;
  key: string;
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'payload-kv';
        value: number | PayloadKv;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  pageType?: T;
  description?: T;
  content?: T;
  featuredImage?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        ogImage?: T;
      };
  publishedAt?: T;
  sections?:
    | T
    | {
        header?:
          | T
          | {
              logo_text?: T;
              menu?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              cta?:
                | T
                | {
                    label?: T;
                    link?: T;
                  };
            };
        hero?:
          | T
          | {
              headline?: T;
              subheadline?: T;
              cta?: T;
              image?: T;
              stats?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
            };
        features?:
          | T
          | {
              title?: T;
              subtitle?: T;
              items?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
            };
        process?:
          | T
          | {
              title?: T;
              subtitle?: T;
              steps?:
                | T
                | {
                    number?: T;
                    icon?: T;
                    title?: T;
                    description?: T;
                    color?: T;
                    id?: T;
                  };
            };
        contact?:
          | T
          | {
              title?: T;
              subtitle?: T;
              form?:
                | T
                | {
                    name?: T;
                    email?: T;
                    phone?: T;
                    voicePrompt?: T;
                    voiceListening?: T;
                    voiceTranscript?: T;
                    submit?: T;
                  };
            };
        footer?:
          | T
          | {
              brand?:
                | T
                | {
                    name?: T;
                    tagline?: T;
                  };
              contact?:
                | T
                | {
                    title?: T;
                    email?: T;
                    phone?: T;
                  };
              links?:
                | T
                | {
                    title?: T;
                    items?:
                      | T
                      | {
                          label?: T;
                          href?: T;
                          id?: T;
                        };
                  };
              copyright?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  password?: T;
  roles?: T;
  username?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  slug?: T;
  allowPublicRead?: T;
  template?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-kv_select".
 */
export interface PayloadKvSelect<T extends boolean = true> {
  key?: T;
  data?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}